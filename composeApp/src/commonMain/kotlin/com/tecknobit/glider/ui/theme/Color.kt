package com.tecknobit.glider.ui.theme
import androidx.compose.ui.graphics.Color

val primaryLightHighContrast = Color(0xFF24265C)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF42447B)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF2A2A3D)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF47475C)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF412236)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF623E54)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF600004)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF98000A)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFCF8FF)
val onBackgroundLightHighContrast = Color(0xFF1B1B21)
val surfaceLightHighContrast = Color(0xFFFCF8FF)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFE4E1EC)
val onSurfaceVariantLightHighContrast = Color(0xFF000000)
val outlineLightHighContrast = Color(0xFF2C2B34)
val outlineVariantLightHighContrast = Color(0xFF494851)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF303036)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFC0C1FF)
val surfaceDimLightHighContrast = Color(0xFFBAB7BF)
val surfaceBrightLightHighContrast = Color(0xFFFCF8FF)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFF3EFF7)
val surfaceContainerLightHighContrast = Color(0xFFE4E1E9)
val surfaceContainerHighLightHighContrast = Color(0xFFD6D3DB)
val surfaceContainerHighestLightHighContrast = Color(0xFFC8C5CD)

val primaryDark = Color(0xFFC0C1FF)
val onPrimaryDark = Color(0xFF292A60)
val primaryContainerDark = Color(0xFF3F4178)
val onPrimaryContainerDark = Color(0xFFE1E0FF)
val secondaryDark = Color(0xFFC6C4DD)
val onSecondaryDark = Color(0xFF2E2F42)
val secondaryContainerDark = Color(0xFF454559)
val onSecondaryContainerDark = Color(0xFFE2E0F9)
val tertiaryDark = Color(0xFFE9B9D3)
val onTertiaryDark = Color(0xFF46263A)
val tertiaryContainerDark = Color(0xFF5F3C51)
val onTertiaryContainerDark = Color(0xFFFFD8EC)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF131318)
val onBackgroundDark = Color(0xFFE4E1E9)
val surfaceDark = Color(0xFF131318)
val onSurfaceDark = Color(0xFFE4E1E9)
val surfaceVariantDark = Color(0xFF46464F)
val onSurfaceVariantDark = Color(0xFFC8C5D0)
val outlineDark = Color(0xFF918F9A)
val outlineVariantDark = Color(0xFF46464F)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFE4E1E9)
val inverseOnSurfaceDark = Color(0xFF303036)
val inversePrimaryDark = Color(0xFF575992)
val surfaceDimDark = Color(0xFF131318)
val surfaceBrightDark = Color(0xFF39383F)
val surfaceContainerLowestDark = Color(0xFF0E0E13)
val surfaceContainerLowDark = Color(0xFF1B1B21)
val surfaceContainerDark = Color(0xFF1F1F25)
val surfaceContainerHighDark = Color(0xFF2A292F)
val surfaceContainerHighestDark = Color(0xFF35343A)